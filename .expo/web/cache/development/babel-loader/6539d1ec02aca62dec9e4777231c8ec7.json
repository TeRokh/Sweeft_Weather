{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { weatherIcons } from \"../config/images\";\n\nvar formatDate = function formatDate(unix_timestamp) {\n  return new Date(unix_timestamp * 1000);\n};\n\nvar Next7 = function Next7(props) {\n  var arrayOfWeekdays = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n  var weatherJSON = _toConsumableArray(props.route.params.response.daily);\n\n  var output = [];\n  weatherJSON.forEach(function (element) {\n    output.push(React.createElement(View, {\n      style: styles.weatherDay\n    }, React.createElement(View, {\n      style: styles.left\n    }, React.createElement(Image, {\n      style: styles.weatherIcon,\n      source: weatherIcons[element.weather[0].main]\n    }), React.createElement(View, {\n      style: styles.date\n    }, React.createElement(Text, {\n      style: styles.dateText\n    }, formatDate(element.dt).toISOString().split('T')[0]), React.createElement(Text, {\n      style: styles.dateText\n    }, arrayOfWeekdays[formatDate(element.dt).getDay()]))), React.createElement(View, {\n      style: styles.right\n    }, React.createElement(Text, {\n      style: styles.tempText\n    }, \"High: \", Math.floor(element.temp.max) + \"째C\"), React.createElement(Text, {\n      style: styles.tempText\n    }, \"Low: \", Math.floor(element.temp.min) + \"째C\"))));\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: StatusBar.currentHeight,\n    paddingBottom: StatusBar.currentHeight,\n    paddingLeft: 10,\n    paddingRight: 10,\n    justifyContent: 'space-evenly',\n    height: \"100%\"\n  },\n  background: {\n    height: \"100%\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    overflow: \"scroll\"\n  },\n  weatherIcon: {\n    resizeMode: \"center\",\n    height: 50,\n    width: 50\n  },\n  weatherDay: {\n    width: Dimensions.get('window').width - 20,\n    height: 80,\n    alignItems: 'center',\n    flexDirection: \"row\",\n    justifyContent: 'space-between',\n    borderRadius: 35,\n    backgroundColor: \"rgba(237, 237, 237, 0.8)\"\n  },\n  left: {\n    paddingLeft: 25,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  right: {\n    paddingRight: 25\n  },\n  dateText: {\n    marginLeft: 10,\n    color: \"black\"\n  },\n  tempText: {\n    color: \"black\",\n    textAlign: \"right\"\n  }\n});\nexport default Next7;","map":{"version":3,"sources":["E:/SWEEFT/working/Tengo/Screens/Next7.js"],"names":["React","weatherIcons","formatDate","unix_timestamp","Date","Next7","props","arrayOfWeekdays","weatherJSON","route","params","response","daily","output","forEach","element","push","styles","weatherDay","left","weatherIcon","weather","main","date","dateText","dt","toISOString","split","getDay","right","tempText","Math","floor","temp","max","min","StyleSheet","create","container","marginTop","StatusBar","currentHeight","paddingBottom","paddingLeft","paddingRight","justifyContent","height","background","alignItems","flexDirection","overflow","resizeMode","width","Dimensions","get","borderRadius","backgroundColor","marginLeft","color","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    View,\r\n    StyleSheet,\r\n    StatusBar,\r\n    Text,\r\n    Image,\r\n    Dimensions,\r\n} from \"react-native\";\r\nimport { weatherIcons } from \"../config/images\"\r\n\r\n\r\n\r\nconst formatDate = (unix_timestamp) => {\r\n    return new Date(unix_timestamp * 1000);\r\n}\r\n\r\nconst Next7 = (props) => {\r\n    var arrayOfWeekdays = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\r\n    let weatherJSON = [...props.route.params.response.daily];\r\n\r\n    let output = []\r\n    weatherJSON.forEach(element => {\r\n        output.push(\r\n            <View style={styles.weatherDay}>\r\n                <View style={styles.left}>\r\n                    <Image style={styles.weatherIcon} source={weatherIcons[element.weather[0].main]} />\r\n                    <View style={styles.date}>\r\n                        <Text style={styles.dateText}>{formatDate(element.dt).toISOString().split('T')[0]}</Text>\r\n                        <Text style={styles.dateText}>{arrayOfWeekdays[formatDate(element.dt).getDay()]}</Text>\r\n                    </View>\r\n                </View>\r\n\r\n                <View style={styles.right}>\r\n                    <Text style={styles.tempText}>High: {Math.floor(element.temp.max) + \"째C\"}</Text>\r\n                    <Text style={styles.tempText}>Low: {Math.floor(element.temp.min) + \"째C\"}</Text>\r\n                </View>\r\n            </View>\r\n        )\r\n    })\r\n   \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        marginTop: StatusBar.currentHeight,\r\n        paddingBottom: StatusBar.currentHeight,\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        justifyContent: 'space-evenly',\r\n        height: \"100%\"\r\n    },\r\n\r\n    background: {\r\n        height: \"100%\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        overflow: \"scroll\"\r\n    },\r\n\r\n    weatherIcon: {\r\n        resizeMode: \"center\",\r\n        height: 50,\r\n        width: 50\r\n    },\r\n\r\n    weatherDay: {\r\n        width: Dimensions.get('window').width - 20,\r\n        height: 80,\r\n        alignItems: 'center',\r\n        flexDirection: \"row\",\r\n        justifyContent: 'space-between',\r\n        borderRadius: 35,\r\n        backgroundColor: \"rgba(237, 237, 237, 0.8)\",\r\n    },\r\n\r\n    left: {\r\n        paddingLeft: 25,\r\n        flexDirection: 'row',\r\n        alignItems: 'center'\r\n    },\r\n\r\n    right: {\r\n        paddingRight: 25\r\n    },\r\n\r\n    dateText: {\r\n        marginLeft: 10,\r\n        color: \"black\"\r\n    },\r\n\r\n    tempText: {\r\n        color: \"black\",\r\n        textAlign: \"right\"\r\n    }\r\n})\r\nexport default Next7;"]},"metadata":{},"sourceType":"module"}
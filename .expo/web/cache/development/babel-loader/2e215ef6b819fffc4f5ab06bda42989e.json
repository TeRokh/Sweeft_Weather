{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nvar days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nvar WeatherItem = function WeatherItem(_ref) {\n  var title = _ref.title,\n      value = _ref.value,\n      unit = _ref.unit;\n  return React.createElement(View, null, React.createElement(Text, null, title), React.createElement(Text, null, value, unit));\n};\n\nvar Date_T = function Date_T() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      time = _useState4[0],\n      setTime = _useState4[1];\n\n  useEffect(function () {\n    setInterval(function () {\n      var time = new Date();\n      var month = time.getMonth();\n      var date = time.getDate();\n      var day = time.getDay();\n      var hour = time.getHours();\n      var hoursIn12HrFormat = hour >= 13 ? hour % 12 : hour;\n      var minutes = time.getMinutes();\n      var ampm = hour >= 12 ? 'pm' : 'am';\n      setTime((hoursIn12HrFormat < 10 ? '0' + hoursIn12HrFormat : hoursIn12HrFormat) + ':' + (minutes < 10 ? '0' + minutes : minutes) + ampm);\n      setDate(days[day] + ', ' + date + ' ' + months[month]);\n    }, 1000);\n  }, []);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, null, React.createElement(View, null, React.createElement(Text, {\n    style: styles.heading\n  }, time)), React.createElement(View, null, React.createElement(Text, {\n    style: styles.subheading\n  }, date))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1.5,\n    flexDirection: \"row\",\n    justifyContent: 'space-between',\n    padding: 10\n  },\n  heading: {\n    fontSize: 45,\n    color: 'white',\n    fontWeight: '100'\n  },\n  subheading: {\n    fontSize: 25,\n    color: '#eee',\n    fontWeight: '300'\n  }\n});\nexport default Date_T;","map":{"version":3,"sources":["E:/SWEEFT/working/Tengo/components/Date_T.js"],"names":["React","useEffect","useState","days","months","WeatherItem","title","value","unit","Date_T","date","setDate","time","setTime","setInterval","Date","month","getMonth","getDate","day","getDay","hour","getHours","hoursIn12HrFormat","minutes","getMinutes","ampm","styles","container","heading","subheading","StyleSheet","create","flex","flexDirection","justifyContent","padding","fontSize","color","fontWeight"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport {View, Text, StyleSheet} from 'react-native'\r\n\r\nconst days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\r\nconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n\r\nconst WeatherItem = ({title, value, unit}) =>{\r\n    return(\r\n        <View>\r\n            <Text>{title}</Text>\r\n            <Text>{value}{unit}</Text>\r\n        </View>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst Date_T = () => {\r\n\r\n    const [date, setDate] = useState('')\r\n    const [time, setTime] = useState('')\r\n\r\n    useEffect (() => {\r\n        setInterval(() => {\r\n            const time = new Date();\r\n            const month = time.getMonth();\r\n            const date = time.getDate();\r\n            const day = time.getDay();\r\n            const hour = time.getHours();\r\n            const hoursIn12HrFormat = hour >= 13 ? hour %12: hour\r\n            const minutes = time.getMinutes();\r\n            const ampm = hour >=12 ? 'pm' : 'am'\r\n        \r\n            setTime((hoursIn12HrFormat < 10? '0'+hoursIn12HrFormat : hoursIn12HrFormat) + ':' + (minutes < 10? '0'+minutes: minutes) +ampm) \r\n        \r\n            setDate(days[day] + ', ' + date+ ' ' + months[month]) \r\n        \r\n        }, 1000);\r\n    }, [])\r\n    return (\r\n        <View style={styles.container}>\r\n            <View>\r\n                <View>\r\n                    <Text style={styles.heading}>{time}</Text>\r\n                </View>\r\n                <View>\r\n                    <Text style={styles.subheading}>{date}</Text>\r\n                </View>\r\n                \r\n            </View>\r\n           \r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create ({\r\n    container:{\r\n        flex:1.5,\r\n        flexDirection:\"row\",\r\n        justifyContent:'space-between',\r\n        padding:10,\r\n    },\r\n\r\n    heading:{\r\n        fontSize:45,\r\n        color:'white',\r\n        fontWeight:'100',\r\n    },\r\n\r\n    subheading:{\r\n        fontSize:25,\r\n        color:'#eee',\r\n        fontWeight:'300',\r\n    },\r\n\r\n \r\n\r\n\r\n\r\n    \r\n})\r\n\r\nexport default Date_T\r\n"]},"metadata":{},"sourceType":"module"}